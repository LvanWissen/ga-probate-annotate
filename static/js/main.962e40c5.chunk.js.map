{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Document","htmlId","VOCABULARY","label","uri","getAnnotations","a","fetch","headers","Accept","res","json","data","storeAnnotation","props","setAnnotations","r","Recogito","content","this","locale","mode","widgets","widget","vocabulary","relationVocabulary","formatter","annotation","tags","bodies","flatMap","body","purpose","value","tagClasses","tag","push","join","on","then","annotations","map","addAnnotation","id","className","Component","App","useState","Container","Header","as","Button","primary","icon","href","encodeURIComponent","JSON","stringify","download","Icon","name","Segment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAiHMA,E,4MACJC,OAAS,e,EAGTC,WAAa,CACX,CACEC,MAAO,WACPC,IAAK,wCAEP,CAAED,MAAO,SAAUC,IAAK,wCACxB,CAAED,MAAO,SAAUC,IAAK,yC,EAI1BC,e,sBAAiB,8BAAAC,EAAA,sEACGC,MAAM,mBAAoB,CAC1CC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAJG,cACTC,EADS,gBAQIA,EAAIC,OARR,cAQTC,EARS,yBAURA,GAVQ,2C,uDAcjB,WAAqB,IAAD,OACZC,EAAkB,WACtB,EAAKC,MAAMC,eAAeC,EAAEX,mBAGxBW,EAAI,IAAIC,WAAS,CACrBC,QAASC,KAAKlB,OACdmB,OAAQ,OACRC,KAAM,MACNC,QAAS,CACP,CAAEC,OAAQ,WACV,CACEA,OAAQ,MACRC,WAAYL,KAAKjB,aAGrBuB,mBAAoB,CAAC,YAAa,WAAY,aAC9CC,UAAW,SAACC,GAEV,IAF8B,EAExBC,EAAOD,EAAWE,OAAOC,SAAQ,SAACC,GAAD,MACpB,YAAjBA,EAAKC,QAAwBD,EAAKE,MAAQ,MAItCC,EAAuB,GAPC,cASZN,GATY,IAS9B,2BAAwB,CAAC,IAAdO,EAAa,QACV,aAARA,EACFD,EAAWE,KAAK,gBACC,WAARD,EACTD,EAAWE,KAAK,cACC,WAARD,GACTD,EAAWE,KAAK,eAfU,8BAmB9B,OAAOF,EAAWG,KAAK,QAK3BrB,EAAEsB,GAAG,mBAAoBzB,GACzBG,EAAEsB,GAAG,mBAAoBzB,GACzBG,EAAEsB,GAAG,mBAAoBzB,GAGzBM,KAAKd,iBAAiBkC,MAAK,SAACC,GAC1BA,EAAYC,KAAI,SAACd,GAAD,OAAoBX,EAAE0B,cAAcf,MACpD,EAAKb,MAAMC,eAAeyB,Q,oBAO9B,WACE,OACE,qBAAKG,GAAIxB,KAAKlB,OAAd,SACE,qBAAK2C,UAAU,OAAf,SAxLA,+1F,GAkGeC,aAuHRC,EA3BH,WACV,MAAsCC,mBAAe,IAArD,mBAAOP,EAAP,KAAoBzB,EAApB,KAEA,OACE,qBAAK6B,UAAU,MAAf,SACE,eAACI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAX,8BAEA,eAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,MAAI,EAACT,UAAU,iBAA/B,UACE,mBACEU,KAAI,uCAAkCC,mBACpCC,KAAKC,UAAUjB,EAAa,KAAM,KAEpCkB,SAAS,mBAJX,2BAOK,IACL,cAACC,EAAA,EAAD,CAAMC,KAAK,gBAGb,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CAAUrB,YAAaA,EAAazB,eAAgBA,YCpN/C+C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.962e40c5.chunk.js","sourcesContent":["import React, { Component, useState } from \"react\";\n\n// Annotation package\nimport { Recogito } from \"@recogito/recogito-js\";\nimport \"@recogito/recogito-js/dist/recogito.min.css\";\n\n// Theming only\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Button, Container, Icon, Header, Segment } from \"semantic-ui-react\";\n\ninterface DocumentProps {\n  annotations: {}[];\n  setAnnotations: (annotations: {}[]) => void;\n}\n\nlet text = `Inventaris ende specificatie van\n432\nalle den huysraet Imboel porceleijne\nLiwaet potgelt gout en silverwerck\nby Catharina Cleyburgh naergelaten\nvoor soo veel desselfs gesamentlycke\nErfgenamen competeren in gevolgen\nvan d Testamente van deselve Catharina\nCleyburgh\nen nooteboome kas\nTwaelf ses karsseboome stoelen\nses spaense stoelen\n-\nEen spiegeltje\nEen schildery van bedesda\nEen dito van een hondt\nEen dito van een appelkopertje\nEen Landschap schildery\nf\n2\nEen printebortje van d' langenins\nEen printebortje synde een vogelaertje\nTwee sackwerckse doofpotjens\nDrie delfs werckse schootels\nen schuymspaen\nEen koopere visketel,\nEen koopere Vijsel en stampert\nEen metale podtsen koper decksel\nEen groote tinne schotel\ndrie dito kleynder\nses Tinne taeffelborden\nacht\nEen Tinne Water pot\nEen coopere Taartpan\nTwee Een dito Blaeckers\n-\nnoch eenigh kenckengoet\nTwee groote porceleyne kommen\ndrie porceleyne drjlingen\n„\nseven\ndrie\nTwee dubbelde porceleyne boterschotels\nTwee dito boterschaeltjens\nacht porceleyne boterschotels,\nTwee groote papegays Coppen en vyfdito cleynder\nVier\nTwee halve porceleyne lampet schootels\nEen pleugkom\nvier mostertschaeltjens\nTwee kommetjens en twee Clapmutsjens\nnoch negen kopjens en tweebrandewyns\npimpeltjens\nTien doornickse Trype stoel cussens\nEen groen Taeffelkleeden\nTwee\nƒ\nalle welcke voorsz. effecten en Contanten tsamen\nter somme van ses duijsent seven hondert acht\ngls. negentien stver acht penningen door de voors.\nSr. Liscalhet sullen werden overgelevert ende\nbehaedight ten behoeve van de voorn. Erfgenamen\nvan Catharina Cleijburgh onderde aen de voorsz.\nSr David van der meer Somme door deselven\ngeadministrerde vruchten ende Interessen daervan ontf. ende aen\nhem liscaljet uytgereijckt te werdn sijn\nleven langh gedurende ingevolge van de Testa\nmente van deselve Catharina Cleyburgh\nbekennende oock mede hy Compt. Daniel liscaljet\nvan sijn duarie by huwelycxse voorwaerde\nhem competerende ende van sijn gelogateerde\nbuyten de voorsz. vruchten ende Interessen voldaen ende\nbetaelt te sijn mitsgaders de gemelte Erfge\ne\nnamen daervan oock bij desen te quiteren\nmet welcke voorsz. scheydinge ende delinge resp\nde voorn. Compten verclaren seer wel te\nvreede te syn ende te vergenoegen Belovende\nde ee de anderen dh effecte van desen te\nsullen doen ende laten genieten sonder daertegens\nte doen ofte gedoogen gedaen te werden in\nrechte noch daer buijten in geenderley\nmanieren, verbindende tot naercominge\ndeses haere persoonen ende goederen deselve\nstellende ten bedwangh van allen rechten ende\nrechteren Alles oprecht gedaen t Amst. ter\npresentie van Jacob van der groe ende gere. Mnnick\nals getuijgen hier toe versocht\nDaniel E is kalijet\nHarmen Dirckse Modeiller\nhuybert lieileers\nwdijle blijbingh\nGvGroe\nDMannek\nQuod attestor rogatus\nd van der groe Nots. P.`;\n\n// Make own component 'Document' for the annotatable source\nclass Document extends Component<DocumentProps> {\n  htmlId = \"text-content\";\n\n  // Example tags that serve as suggestions in the tool\n  VOCABULARY = [\n    {\n      label: \"material\",\n      uri: \"http://vocab.getty.edu/aat/300010358\",\n    },\n    { label: \"object\", uri: \"http://vocab.getty.edu/aat/300311889\" },\n    { label: \"person\", uri: \"http://vocab.getty.edu/aat/300024979\" },\n  ];\n\n  // Get the annotations from a static file in this case\n  getAnnotations = async () => {\n    const res = await fetch(\"annotations.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Initialize the Recogito instance after the component is mounted in the page\n  componentDidMount() {\n    const storeAnnotation = () => {\n      this.props.setAnnotations(r.getAnnotations());\n    };\n\n    const r = new Recogito({\n      content: this.htmlId,\n      locale: \"auto\",\n      mode: \"pre\",\n      widgets: [\n        { widget: \"COMMENT\" },\n        {\n          widget: \"TAG\",\n          vocabulary: this.VOCABULARY,\n        },\n      ],\n      relationVocabulary: [\"isRelated\", \"isPartOf\", \"isSameAs \"],\n      formatter: (annotation: any) => {\n        // Get all tags in the bodies of the annotation\n        const tags = annotation.bodies.flatMap((body: any) =>\n          body.purpose === \"tagging\" ? body.value : []\n        );\n\n        // See CSS for the actual styling\n        const tagClasses: string[] = [];\n\n        for (const tag of tags) {\n          if (tag === \"material\") {\n            tagClasses.push(\"tag-material\");\n          } else if (tag === \"object\") {\n            tagClasses.push(\"tag-object\");\n          } else if (tag === \"person\") {\n            tagClasses.push(\"tag-person\");\n          }\n        }\n\n        return tagClasses.join(\" \");\n      },\n    });\n\n    // Make sure that the annotations are stored in the state\n    r.on(\"createAnnotation\", storeAnnotation);\n    r.on(\"deleteAnnotation\", storeAnnotation);\n    r.on(\"updateAnnotation\", storeAnnotation);\n\n    // Load the annotations from the file\n    this.getAnnotations().then((annotations) => {\n      annotations.map((annotation: {}) => r.addAnnotation(annotation));\n      this.props.setAnnotations(annotations);\n    });\n\n    // For debugging, this can be helpful\n    // console.log(r);\n  }\n\n  render() {\n    return (\n      <div id={this.htmlId}>\n        <div className=\"code\">{text}</div>\n      </div>\n    );\n  }\n}\n\nconst App = () => {\n  const [annotations, setAnnotations] = useState<{}[]>([]);\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Header as=\"h1\">Probate Annotate</Header>\n\n        <Button primary icon className=\"downloadbutton\">\n          <a\n            href={`data:text/json;charset=utf-8,${encodeURIComponent(\n              JSON.stringify(annotations, null, 2)\n            )}`}\n            download=\"annotations.json\"\n          >\n            {`Download Json`}\n          </a>{\" \"}\n          <Icon name=\"download\" />\n        </Button>\n\n        <Segment>\n          <Document annotations={annotations} setAnnotations={setAnnotations} />\n        </Segment>\n      </Container>\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}